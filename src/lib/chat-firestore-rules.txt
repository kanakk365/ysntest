rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function signedIn() { return request.auth != null; }
    function memberOf(cid) {
      return signedIn() &&
        get(/databases/$(database)/documents/conversations/$(cid))
          .data.members[request.auth.uid] == true;
    }

    match /users/{uid} {
      allow read: if signedIn();
      allow write: if signedIn() && request.auth.uid == uid;
    }

    match /conversations/{cid} {
      allow read: if signedIn() && (request.auth.uid in resource.data.members);
      allow create: if signedIn() && request.resource.data.members[request.auth.uid] == true;
      allow update: if signedIn() && (request.auth.uid in resource.data.members);
      allow delete: if signedIn() && resource.data.ownerId == request.auth.uid;

      match /messages/{mid} {
        allow read, create: if memberOf(cid);
        allow update, delete: if memberOf(cid) && request.auth.uid == resource.data.senderId;
      }
    }
  }
}




